[INFO] Scanning for projects...
[INFO] 
[INFO] --------------------< com.example:video-interface >---------------------
[INFO] Building video-app 0.0.1-SNAPSHOT
[INFO]   from pom.xml
[INFO] --------------------------------[ jar ]---------------------------------
[INFO] 
[INFO] >>> spring-boot:3.2.3:run (default-cli) > test-compile @ video-interface >>>
[INFO] 
[INFO] --- resources:3.3.1:resources (default-resources) @ video-interface ---
[INFO] Copying 1 resource from src/main/resources to target/classes
[INFO] Copying 5 resources from src/main/resources to target/classes
[INFO] 
[INFO] --- compiler:3.11.0:compile (default-compile) @ video-interface ---
[INFO] Nothing to compile - all classes are up to date
[INFO] 
[INFO] --- resources:3.3.1:testResources (default-testResources) @ video-interface ---
[INFO] skip non existing resourceDirectory /Users/zhangjin/fb_video/video-interface/src/test/resources
[INFO] 
[INFO] --- compiler:3.11.0:testCompile (default-testCompile) @ video-interface ---
[INFO] No sources to compile
[INFO] 
[INFO] <<< spring-boot:3.2.3:run (default-cli) < test-compile @ video-interface <<<
[INFO] 
[INFO] 
[INFO] --- spring-boot:3.2.3:run (default-cli) @ video-interface ---
[INFO] Attaching agents: []

  .   ____          _            __ _ _
 /\\ / ___'_ __ _ _(_)_ __  __ _ \ \ \ \
( ( )\___ | '_ | '_| | '_ \/ _` | \ \ \ \
 \\/  ___)| |_)| | | | | || (_| |  ) ) ) )
  '  |____| .__|_| |_|_| |_\__, | / / / /
 =========|_|==============|___/=/_/_/_/
[32m :: Spring Boot :: [39m              [2m (v3.2.3)[0;39m

2025-07-09 05:59:59 [main] INFO  c.e.video_interface.Application - Starting Application using Java 23.0.2 with PID 90397 (/Users/zhangjin/fb_video/video-interface/target/classes started by zhangjin in /Users/zhangjin/fb_video/video-interface)
2025-07-09 05:59:59 [main] DEBUG c.e.video_interface.Application - Running with Spring Boot v3.2.3, Spring v6.1.4
2025-07-09 05:59:59 [main] INFO  c.e.video_interface.Application - No active profile set, falling back to 1 default profile: "default"
2025-07-09 05:59:59 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2025-07-09 05:59:59 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-07-09 05:59:59 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 60 ms. Found 1 JPA repository interface.
2025-07-09 05:59:59 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2025-07-09 05:59:59 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2025-07-09 05:59:59 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.example.video_interface.repository.UserRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-07-09 05:59:59 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 3 ms. Found 0 Redis repository interfaces.
2025-07-09 05:59:59 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port 8080 (http)
2025-07-09 05:59:59 [main] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2025-07-09 05:59:59 [main] INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.19]
2025-07-09 05:59:59 [main] INFO  o.a.c.c.C.[.[localhost].[/api] - Initializing Spring embedded WebApplicationContext
2025-07-09 05:59:59 [main] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 585 ms
2025-07-09 05:59:59 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2025-07-09 06:00:00 [main] INFO  com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@6de7778f
2025-07-09 06:00:00 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2025-07-09 06:00:00 [main] INFO  o.f.c.i.license.VersionPrinter - Flyway Community Edition 9.22.3 by Redgate
2025-07-09 06:00:00 [main] INFO  o.f.c.i.license.VersionPrinter - See release notes here: https://rd.gt/416ObMi
2025-07-09 06:00:00 [main] INFO  o.f.c.i.license.VersionPrinter - 
2025-07-09 06:00:00 [main] INFO  org.flywaydb.core.FlywayExecutor - Database: jdbc:mysql://localhost:3306/fb_video (MySQL 9.3)
2025-07-09 06:00:00 [main] WARN  o.f.c.i.database.base.Database - Flyway upgrade recommended: MySQL 9.3 is newer than this version of Flyway and support has not been tested. The latest supported version of MySQL is 8.0.
2025-07-09 06:00:00 [main] INFO  o.f.core.internal.command.DbValidate - Successfully validated 5 migrations (execution time 00:00.012s)
2025-07-09 06:00:00 [main] INFO  o.f.core.internal.command.DbMigrate - Current version of schema `fb_video`: 6
2025-07-09 06:00:00 [main] WARN  o.f.core.internal.command.DbMigrate - outOfOrder mode is active. Migration of schema `fb_video` may not be reproducible.
2025-07-09 06:00:00 [main] INFO  o.f.core.internal.command.DbMigrate - Schema `fb_video` is up to date. No migration necessary.
2025-07-09 06:00:00 [main] INFO  o.h.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
2025-07-09 06:00:00 [main] INFO  org.hibernate.Version - HHH000412: Hibernate ORM core version 6.4.4.Final
2025-07-09 06:00:00 [main] INFO  o.h.c.i.RegionFactoryInitiator - HHH000026: Second-level cache disabled
2025-07-09 06:00:00 [main] INFO  o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2025-07-09 06:00:00 [main] WARN  org.hibernate.orm.deprecation - HHH90000025: MySQL8Dialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
2025-07-09 06:00:00 [main] WARN  org.hibernate.orm.deprecation - HHH90000026: MySQL8Dialect has been deprecated; use org.hibernate.dialect.MySQLDialect instead
2025-07-09 06:00:00 [main] INFO  o.h.e.t.j.p.i.JtaPlatformInitiator - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2025-07-09 06:00:00 [main] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-07-09 06:00:00 [main] DEBUG c.e.v.security.JwtTokenProvider - Initializing enhanced JWT security with secret length: 63
2025-07-09 06:00:00 [main] DEBUG c.e.v.security.JwtTokenProvider - Enhanced JWT security initialized successfully
2025-07-09 06:00:00 [main] DEBUG c.e.v.s.JwtAuthenticationFilter - Filter 'jwtAuthenticationFilter' configured for use
2025-07-09 06:00:00 [main] INFO  c.e.v.config.LoginSecurityConfig - 🔒 登录安全配置初始化完成:
2025-07-09 06:00:00 [main] INFO  c.e.v.config.LoginSecurityConfig -   ├─ 普通用户最大失败次数: 5
2025-07-09 06:00:00 [main] INFO  c.e.v.config.LoginSecurityConfig -   ├─ 管理员最大失败次数: 5
2025-07-09 06:00:00 [main] INFO  c.e.v.config.LoginSecurityConfig -   ├─ 普通用户锁定时间: 30 分钟
2025-07-09 06:00:00 [main] INFO  c.e.v.config.LoginSecurityConfig -   ├─ 管理员锁定时间: 60 分钟
2025-07-09 06:00:00 [main] INFO  c.e.v.config.LoginSecurityConfig -   ├─ 失败次数重置窗口: 24 小时
2025-07-09 06:00:00 [main] INFO  c.e.v.config.LoginSecurityConfig -   ├─ 锁定通知: 启用
2025-07-09 06:00:00 [main] INFO  c.e.v.config.LoginSecurityConfig -   └─ 登录日志: 启用
2025-07-09 06:00:00 [main] INFO  c.e.v.config.LoginSecurityConfig - ✅ 登录安全配置验证完成
2025-07-09 06:00:01 [main] INFO  c.e.v.config.CryptoConfig - 🔐 加密配置初始化完成:
2025-07-09 06:00:01 [main] INFO  c.e.v.config.CryptoConfig -   ├─ 基础密钥长度: 64 字符
2025-07-09 06:00:01 [main] INFO  c.e.v.config.CryptoConfig -   ├─ 时间窗口: 180000 ms
2025-07-09 06:00:01 [main] INFO  c.e.v.config.CryptoConfig -   ├─ AES算法: AES/CTR/NoPadding
2025-07-09 06:00:01 [main] INFO  c.e.v.config.CryptoConfig -   ├─ HMAC算法: HmacSHA256
2025-07-09 06:00:01 [main] INFO  c.e.v.config.CryptoConfig -   ├─ 哈希算法: SHA-256
2025-07-09 06:00:01 [main] INFO  c.e.v.config.CryptoConfig -   ├─ JWT设备绑定: true
2025-07-09 06:00:01 [main] INFO  c.e.v.config.CryptoConfig -   ├─ JWT额外加密: true
2025-07-09 06:00:01 [main] INFO  c.e.v.config.CryptoConfig -   ├─ H5加密启用: true
2025-07-09 06:00:01 [main] INFO  c.e.v.config.CryptoConfig -   ├─ 管理端加密启用: true
2025-07-09 06:00:01 [main] INFO  c.e.v.config.CryptoConfig -   ├─ 移动端加密启用: true
2025-07-09 06:00:01 [main] INFO  c.e.v.config.CryptoConfig -   ├─ 要求签名验证: true
2025-07-09 06:00:01 [main] INFO  c.e.v.config.CryptoConfig -   ├─ 严格设备绑定: false
2025-07-09 06:00:01 [main] INFO  c.e.v.config.CryptoConfig -   └─ 敏感字段数量: 15
2025-07-09 06:00:01 [main] INFO  c.e.v.config.CryptoConfig - ✅ 加密配置安全性检查完成
2025-07-09 06:00:01 [main] WARN  o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2025-07-09 06:00:01 [main] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - 18 mappings in 'requestMappingHandlerMapping'
2025-07-09 06:00:01 [main] INFO  c.e.v.config.SecurityConfig - 配置安全过滤链
2025-07-09 06:00:01 [main] INFO  c.e.v.config.SecurityConfig - 配置CORS规则，允许的源：[http://localhost:5173, http://localhost:3000, http://localhost:4000, http://localhost:4001, http://localhost:8080]
2025-07-09 06:00:01 [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Will secure any request with [org.springframework.security.web.session.DisableEncodeUrlFilter@768967cf, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@116fe252, org.springframework.security.web.context.SecurityContextHolderFilter@5fe19d0e, org.springframework.security.web.header.HeaderWriterFilter@7aff1db3, org.springframework.web.filter.CorsFilter@7b8b755d, org.springframework.security.web.authentication.logout.LogoutFilter@6f4e39b3, com.example.video_interface.filter.DecryptionFilter@2512155e, com.example.video_interface.security.JwtAuthenticationFilter@53c21c05, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@2aadeb31, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@704ddfad, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@3bd5dff5, org.springframework.security.web.session.SessionManagementFilter@3619bc9e, org.springframework.security.web.access.ExceptionTranslationFilter@6ed87b1c, org.springframework.security.web.access.intercept.AuthorizationFilter@5e572ad6]
2025-07-09 06:00:01 [main] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerAdapter - ControllerAdvice beans: 0 @ModelAttribute, 0 @InitBinder, 1 RequestBodyAdvice, 1 ResponseBodyAdvice
2025-07-09 06:00:01 [main] DEBUG o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - ControllerAdvice beans: 0 @ExceptionHandler, 1 ResponseBodyAdvice
2025-07-09 06:00:01 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port 8080 (http) with context path '/api'
2025-07-09 06:00:01 [main] INFO  c.e.video_interface.Application - Started Application in 2.218 seconds (process running for 2.357)
2025-07-09 06:00:21 [http-nio-8080-exec-1] INFO  o.a.c.c.C.[.[localhost].[/api] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2025-07-09 06:00:21 [http-nio-8080-exec-1] INFO  o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2025-07-09 06:00:21 [http-nio-8080-exec-1] DEBUG o.s.web.servlet.DispatcherServlet - Detected StandardServletMultipartResolver
2025-07-09 06:00:21 [http-nio-8080-exec-1] DEBUG o.s.web.servlet.DispatcherServlet - Detected AcceptHeaderLocaleResolver
2025-07-09 06:00:21 [http-nio-8080-exec-1] DEBUG o.s.web.servlet.DispatcherServlet - Detected FixedThemeResolver
2025-07-09 06:00:21 [http-nio-8080-exec-1] DEBUG o.s.web.servlet.DispatcherServlet - Detected org.springframework.web.servlet.view.DefaultRequestToViewNameTranslator@31c17fd4
2025-07-09 06:00:21 [http-nio-8080-exec-1] DEBUG o.s.web.servlet.DispatcherServlet - Detected org.springframework.web.servlet.support.SessionFlashMapManager@5c6ee543
2025-07-09 06:00:21 [http-nio-8080-exec-1] DEBUG o.s.web.servlet.DispatcherServlet - enableLoggingRequestDetails='false': request parameters and headers will be masked to prevent unsafe logging of potentially sensitive data
2025-07-09 06:00:21 [http-nio-8080-exec-1] INFO  o.s.web.servlet.DispatcherServlet - Completed initialization in 1 ms
2025-07-09 06:00:21 [http-nio-8080-exec-1] DEBUG c.e.v.filter.DecryptionFilter - 🔍 读取到请求体: length=47, content={"username":"testuser001","password":"pass123"}
2025-07-09 06:00:21 [http-nio-8080-exec-1] DEBUG c.e.v.filter.DecryptionFilter - 🔍 处理请求: method=POST, url=/api/users/auth, clientType=null, hasSignature=false, signatureRequired=true
2025-07-09 06:00:21 [http-nio-8080-exec-1] DEBUG c.e.v.filter.DecryptionFilter - 📡 请求头调试:
2025-07-09 06:00:21 [http-nio-8080-exec-1] DEBUG c.e.v.filter.DecryptionFilter -   - Content-Type: application/json
2025-07-09 06:00:21 [http-nio-8080-exec-1] DEBUG c.e.v.filter.DecryptionFilter -   - Content-Length: 47
2025-07-09 06:00:21 [http-nio-8080-exec-1] DEBUG c.e.v.filter.DecryptionFilter -   - X-Timestamp: null
2025-07-09 06:00:21 [http-nio-8080-exec-1] DEBUG c.e.v.filter.DecryptionFilter -   - X-Signature: null
2025-07-09 06:00:21 [http-nio-8080-exec-1] DEBUG c.e.v.filter.DecryptionFilter -   - X-Device-ID: null
2025-07-09 06:00:21 [http-nio-8080-exec-1] DEBUG c.e.v.filter.DecryptionFilter -   - X-Client-Type: null
2025-07-09 06:00:21 [http-nio-8080-exec-1] DEBUG c.e.v.filter.DecryptionFilter - 📦 请求体原始数据 (前100字符): {"username":"testuser001","password":"pass123"}...
2025-07-09 06:00:21 [http-nio-8080-exec-1] DEBUG c.e.v.filter.DecryptionFilter - 🔐 生产级模式：执行完整的安全验证流程
2025-07-09 06:00:21 [http-nio-8080-exec-1] DEBUG c.e.v.filter.DecryptionFilter - 📄 普通请求，无需解密验证
2025-07-09 06:00:21 [http-nio-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Securing POST /users/auth
2025-07-09 06:00:21 [http-nio-8080-exec-1] DEBUG c.e.v.filter.DecryptionFilter - 📄 请求已经过解密处理，直接通过
2025-07-09 06:00:21 [http-nio-8080-exec-1] DEBUG c.e.v.s.JwtAuthenticationFilter - JWT过滤器处理请求: POST /api/users/auth
2025-07-09 06:00:21 [http-nio-8080-exec-1] DEBUG c.e.v.s.JwtAuthenticationFilter - 路径匹配检查: /api/users/register vs /api/users/auth = false
2025-07-09 06:00:21 [http-nio-8080-exec-1] DEBUG c.e.v.s.JwtAuthenticationFilter - 路径匹配检查: /api/users/login vs /api/users/auth = false
2025-07-09 06:00:21 [http-nio-8080-exec-1] DEBUG c.e.v.s.JwtAuthenticationFilter - 路径匹配检查: /api/users/auth vs /api/users/auth = true
2025-07-09 06:00:21 [http-nio-8080-exec-1] DEBUG c.e.v.s.JwtAuthenticationFilter - 路径 /api/users/auth 是否为公开路径: true
2025-07-09 06:00:21 [http-nio-8080-exec-1] DEBUG c.e.v.s.JwtAuthenticationFilter - 公开路径，直接放行: /api/users/auth
2025-07-09 06:00:21 [http-nio-8080-exec-1] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-07-09 06:00:21 [http-nio-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Secured POST /users/auth
2025-07-09 06:00:21 [http-nio-8080-exec-1] DEBUG o.s.web.servlet.DispatcherServlet - POST "/api/users/auth", parameters={}
2025-07-09 06:00:21 [http-nio-8080-exec-1] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.example.video_interface.controller.UserController#authenticateUser(Map, HttpServletRequest)
2025-07-09 06:00:21 [http-nio-8080-exec-1] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Read "application/json;charset=UTF-8" to [{username=testuser001, password=pass123}]
2025-07-09 06:00:21 [http-nio-8080-exec-1] INFO  c.e.v.controller.UserController - 收到H5统一认证请求: testuser001
Hibernate: select u1_0.id from users u1_0 where u1_0.username=? limit ?
2025-07-09 06:00:21 [http-nio-8080-exec-1] INFO  c.e.v.controller.UserController - 用户已存在，执行H5登录: testuser001
2025-07-09 06:00:21 [http-nio-8080-exec-1] INFO  c.e.v.service.impl.UserServiceImpl - 🔐 处理H5用户登录请求（无锁定机制）: testuser001
2025-07-09 06:00:21 [http-nio-8080-exec-1] DEBUG c.e.v.util.RequestContextUtil - 🌐 使用远程地址: 0:0:0:0:0:0:0:1
2025-07-09 06:00:21 [http-nio-8080-exec-1] DEBUG c.e.v.service.impl.UserServiceImpl - 📍 客户端IP: 0:0:0:0:0:0:0:1
Hibernate: select u1_0.id,u1_0.account_balance,u1_0.avatar,u1_0.created_at,u1_0.email,u1_0.failed_login_attempts,u1_0.is_locked,u1_0.is_vip,u1_0.last_failed_login_time,u1_0.last_login_ip,u1_0.last_login_time,u1_0.lock_reason,u1_0.lock_time,u1_0.password,u1_0.phone_number,u1_0.role,u1_0.status,u1_0.unlock_time,u1_0.updated_at,u1_0.username,u1_0.vip_expire_time,u1_0.watch_time from users u1_0 where u1_0.username=?
2025-07-09 06:00:21 [http-nio-8080-exec-1] DEBUG o.s.s.a.d.DaoAuthenticationProvider - Failed to authenticate since password does not match stored value
2025-07-09 06:00:21 [http-nio-8080-exec-1] ERROR c.e.v.service.impl.UserServiceImpl - 🚨 H5用户登录失败: testuser001 (IP: 0:0:0:0:0:0:0:1) - 原因: Bad credentials
2025-07-09 06:00:21 [http-nio-8080-exec-1] WARN  c.e.v.service.impl.UserServiceImpl - 🔍 H5端错误信息（无锁定机制）: 密码错误，请重试
2025-07-09 06:00:21 [http-nio-8080-exec-1] ERROR c.e.v.controller.UserController - H5认证失败: 密码错误，请重试
java.lang.IllegalArgumentException: 密码错误，请重试
	at com.example.video_interface.service.impl.UserServiceImpl.h5LoginUser(UserServiceImpl.java:288)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:351)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:196)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:765)
	at org.springframework.transaction.interceptor.TransactionInterceptor$1.proceedWithInvocation(TransactionInterceptor.java:123)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:385)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:765)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:717)
	at com.example.video_interface.service.impl.UserServiceImpl$$SpringCGLIB$$0.h5LoginUser(<generated>)
	at com.example.video_interface.controller.UserController.authenticateUser(UserController.java:115)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:351)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:713)
	at com.example.video_interface.controller.UserController$$SpringCGLIB$$0.authenticateUser(<generated>)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:259)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:192)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:920)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:830)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:914)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:590)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:205)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:110)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:108)
	at org.springframework.security.web.FilterChainProxy.lambda$doFilterInternal$3(FilterChainProxy.java:231)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:365)
	at org.springframework.security.web.access.intercept.AuthorizationFilter.doFilter(AuthorizationFilter.java:100)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:126)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:120)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:131)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:85)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:100)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:179)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at com.example.video_interface.security.JwtAuthenticationFilter.doFilterInternal(JwtAuthenticationFilter.java:63)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at com.example.video_interface.filter.DecryptionFilter.doFilter(DecryptionFilter.java:52)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:107)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:93)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:91)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:82)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:69)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:62)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:233)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:191)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.servlet.handler.HandlerMappingIntrospector.lambda$createCacheFilter$3(HandlerMappingIntrospector.java:195)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.filter.CompositeFilter.doFilter(CompositeFilter.java:74)
	at org.springframework.security.config.annotation.web.configuration.WebMvcSecurityConfiguration$CompositeFilterChainProxy.doFilter(WebMvcSecurityConfiguration.java:230)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:352)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:268)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at com.example.video_interface.filter.DecryptionFilter.doFilter(DecryptionFilter.java:136)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:482)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:391)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:896)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1744)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:1575)
2025-07-09 06:00:22 [http-nio-8080-exec-1] INFO  c.e.v.controller.UserController - H5登录失败，IP: 0:0:0:0:0:0:0:1, 失败次数: 1, 需要验证码: false
2025-07-09 06:00:22 [http-nio-8080-exec-1] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2025-07-09 06:00:22 [http-nio-8080-exec-1] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [{needCaptcha=false, status=error, error=密码错误，请重试}]
2025-07-09 06:00:22 [http-nio-8080-exec-1] DEBUG o.s.web.servlet.DispatcherServlet - Completed 400 BAD_REQUEST
2025-07-09 06:00:32 [http-nio-8080-exec-2] DEBUG c.e.v.filter.DecryptionFilter - 🔍 读取到请求体: length=54, content={"username":"newtestuser123","password":"password123"}
2025-07-09 06:00:32 [http-nio-8080-exec-2] DEBUG c.e.v.filter.DecryptionFilter - 🔍 处理请求: method=POST, url=/api/users/auth, clientType=null, hasSignature=false, signatureRequired=true
2025-07-09 06:00:32 [http-nio-8080-exec-2] DEBUG c.e.v.filter.DecryptionFilter - 📡 请求头调试:
2025-07-09 06:00:32 [http-nio-8080-exec-2] DEBUG c.e.v.filter.DecryptionFilter -   - Content-Type: application/json
2025-07-09 06:00:32 [http-nio-8080-exec-2] DEBUG c.e.v.filter.DecryptionFilter -   - Content-Length: 54
2025-07-09 06:00:32 [http-nio-8080-exec-2] DEBUG c.e.v.filter.DecryptionFilter -   - X-Timestamp: null
2025-07-09 06:00:32 [http-nio-8080-exec-2] DEBUG c.e.v.filter.DecryptionFilter -   - X-Signature: null
2025-07-09 06:00:32 [http-nio-8080-exec-2] DEBUG c.e.v.filter.DecryptionFilter -   - X-Device-ID: null
2025-07-09 06:00:32 [http-nio-8080-exec-2] DEBUG c.e.v.filter.DecryptionFilter -   - X-Client-Type: null
2025-07-09 06:00:32 [http-nio-8080-exec-2] DEBUG c.e.v.filter.DecryptionFilter - 📦 请求体原始数据 (前100字符): {"username":"newtestuser123","password":"password123"}...
2025-07-09 06:00:32 [http-nio-8080-exec-2] DEBUG c.e.v.filter.DecryptionFilter - 🔐 生产级模式：执行完整的安全验证流程
2025-07-09 06:00:32 [http-nio-8080-exec-2] DEBUG c.e.v.filter.DecryptionFilter - 📄 普通请求，无需解密验证
2025-07-09 06:00:32 [http-nio-8080-exec-2] DEBUG o.s.security.web.FilterChainProxy - Securing POST /users/auth
2025-07-09 06:00:32 [http-nio-8080-exec-2] DEBUG c.e.v.filter.DecryptionFilter - 📄 请求已经过解密处理，直接通过
2025-07-09 06:00:32 [http-nio-8080-exec-2] DEBUG c.e.v.s.JwtAuthenticationFilter - JWT过滤器处理请求: POST /api/users/auth
2025-07-09 06:00:32 [http-nio-8080-exec-2] DEBUG c.e.v.s.JwtAuthenticationFilter - 路径匹配检查: /api/users/register vs /api/users/auth = false
2025-07-09 06:00:32 [http-nio-8080-exec-2] DEBUG c.e.v.s.JwtAuthenticationFilter - 路径匹配检查: /api/users/login vs /api/users/auth = false
2025-07-09 06:00:32 [http-nio-8080-exec-2] DEBUG c.e.v.s.JwtAuthenticationFilter - 路径匹配检查: /api/users/auth vs /api/users/auth = true
2025-07-09 06:00:32 [http-nio-8080-exec-2] DEBUG c.e.v.s.JwtAuthenticationFilter - 路径 /api/users/auth 是否为公开路径: true
2025-07-09 06:00:32 [http-nio-8080-exec-2] DEBUG c.e.v.s.JwtAuthenticationFilter - 公开路径，直接放行: /api/users/auth
2025-07-09 06:00:32 [http-nio-8080-exec-2] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-07-09 06:00:32 [http-nio-8080-exec-2] DEBUG o.s.security.web.FilterChainProxy - Secured POST /users/auth
2025-07-09 06:00:32 [http-nio-8080-exec-2] DEBUG o.s.web.servlet.DispatcherServlet - POST "/api/users/auth", parameters={}
2025-07-09 06:00:32 [http-nio-8080-exec-2] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.example.video_interface.controller.UserController#authenticateUser(Map, HttpServletRequest)
2025-07-09 06:00:32 [http-nio-8080-exec-2] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Read "application/json;charset=UTF-8" to [{username=newtestuser123, password=password123}]
2025-07-09 06:00:32 [http-nio-8080-exec-2] INFO  c.e.v.controller.UserController - 收到H5统一认证请求: newtestuser123
Hibernate: select u1_0.id from users u1_0 where u1_0.username=? limit ?
2025-07-09 06:00:32 [http-nio-8080-exec-2] INFO  c.e.v.controller.UserController - 用户不存在，执行注册: newtestuser123
2025-07-09 06:00:32 [http-nio-8080-exec-2] INFO  c.e.v.service.impl.UserServiceImpl - 开始处理用户注册请求: newtestuser123
2025-07-09 06:00:32 [http-nio-8080-exec-2] DEBUG c.e.v.util.RequestContextUtil - 🌐 使用远程地址: 0:0:0:0:0:0:0:1
2025-07-09 06:00:32 [http-nio-8080-exec-2] DEBUG c.e.v.service.impl.UserServiceImpl - 📍 客户端IP: 0:0:0:0:0:0:0:1
Hibernate: select u1_0.id from users u1_0 where u1_0.username=? limit ?
2025-07-09 06:00:32 [http-nio-8080-exec-2] DEBUG c.e.v.s.RegistrationLimitService - 🔍 IP 0:0:0:0:0:0:0:1 当前注册次数: 8, 限制: 3, 可注册: false
2025-07-09 06:00:32 [http-nio-8080-exec-2] WARN  c.e.v.service.impl.UserServiceImpl - 🚫 IP 0:0:0:0:0:0:0:1 注册次数已达限制: 8/3，需等待 1 小时后重试
2025-07-09 06:00:32 [http-nio-8080-exec-2] ERROR c.e.v.controller.UserController - H5认证失败: 注册频繁，请稍后重试
java.lang.IllegalArgumentException: 注册频繁，请稍后重试
	at com.example.video_interface.service.impl.UserServiceImpl.registerUser(UserServiceImpl.java:74)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:351)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:196)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:765)
	at org.springframework.transaction.interceptor.TransactionInterceptor$1.proceedWithInvocation(TransactionInterceptor.java:123)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:385)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:765)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:717)
	at com.example.video_interface.service.impl.UserServiceImpl$$SpringCGLIB$$0.registerUser(<generated>)
	at com.example.video_interface.controller.UserController.authenticateUser(UserController.java:136)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:351)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:713)
	at com.example.video_interface.controller.UserController$$SpringCGLIB$$0.authenticateUser(<generated>)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:259)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:192)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:920)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:830)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:914)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:590)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:205)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:110)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:108)
	at org.springframework.security.web.FilterChainProxy.lambda$doFilterInternal$3(FilterChainProxy.java:231)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:365)
	at org.springframework.security.web.access.intercept.AuthorizationFilter.doFilter(AuthorizationFilter.java:100)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:126)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:120)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:131)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:85)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:100)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:179)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at com.example.video_interface.security.JwtAuthenticationFilter.doFilterInternal(JwtAuthenticationFilter.java:63)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at com.example.video_interface.filter.DecryptionFilter.doFilter(DecryptionFilter.java:52)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:107)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:93)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:91)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:82)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:69)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:62)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:233)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:191)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.servlet.handler.HandlerMappingIntrospector.lambda$createCacheFilter$3(HandlerMappingIntrospector.java:195)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.filter.CompositeFilter.doFilter(CompositeFilter.java:74)
	at org.springframework.security.config.annotation.web.configuration.WebMvcSecurityConfiguration$CompositeFilterChainProxy.doFilter(WebMvcSecurityConfiguration.java:230)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:352)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:268)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at com.example.video_interface.filter.DecryptionFilter.doFilter(DecryptionFilter.java:136)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:482)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:391)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:896)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1744)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:1575)
2025-07-09 06:00:32 [http-nio-8080-exec-2] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2025-07-09 06:00:32 [http-nio-8080-exec-2] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [{needCaptcha=false, status=error, error=注册频繁，请稍后重试}]
2025-07-09 06:00:32 [http-nio-8080-exec-2] DEBUG o.s.web.servlet.DispatcherServlet - Completed 400 BAD_REQUEST
2025-07-09 06:00:59 [http-nio-8080-exec-3] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /users/register
2025-07-09 06:00:59 [http-nio-8080-exec-4] DEBUG c.e.v.filter.DecryptionFilter - 🔍 读取到请求体: length=362, content={"username":{"ciphertext":"9DMClNf3U+g=","iv":"N+PdPWQ8KFOrcwaaJidYjw==","timestamp":1752015659361},"password":{"ciphertext":"4Nt79Bs4KVE=","iv":"hcczRWyG7HKG9o62ov6whQ==","timestamp":1752015659361},"_crypto":{"encrypted":true,"fields":["password","username"],"timestamp":1752015659361,"version":"1.0","signature":"FbFfJNPNNOS/jW5M9FndSmv9eI6yTwfKXXxhBV/gjm4="}}
2025-07-09 06:00:59 [http-nio-8080-exec-4] DEBUG c.e.v.filter.DecryptionFilter - 🔍 处理请求: method=POST, url=/api/users/register, clientType=h5, hasSignature=true, signatureRequired=true
2025-07-09 06:00:59 [http-nio-8080-exec-4] DEBUG c.e.v.filter.DecryptionFilter - 📡 请求头调试:
2025-07-09 06:00:59 [http-nio-8080-exec-4] DEBUG c.e.v.filter.DecryptionFilter -   - Content-Type: application/json
2025-07-09 06:00:59 [http-nio-8080-exec-4] DEBUG c.e.v.filter.DecryptionFilter -   - Content-Length: 362
2025-07-09 06:00:59 [http-nio-8080-exec-4] DEBUG c.e.v.filter.DecryptionFilter -   - X-Timestamp: 1752015659361
2025-07-09 06:00:59 [http-nio-8080-exec-4] DEBUG c.e.v.filter.DecryptionFilter -   - X-Signature: aX7YHobJFpbe9PlnPMwfEhuKeUa4LLxoHarHp9jIhXA=
2025-07-09 06:00:59 [http-nio-8080-exec-4] DEBUG c.e.v.filter.DecryptionFilter -   - X-Device-ID: cac975720051131b98a2e36ff283c63d3c2f447e39a5f93e2a74345eb0aeea5c
2025-07-09 06:00:59 [http-nio-8080-exec-4] DEBUG c.e.v.filter.DecryptionFilter -   - X-Client-Type: h5
2025-07-09 06:00:59 [http-nio-8080-exec-4] DEBUG c.e.v.filter.DecryptionFilter - 📦 请求体原始数据 (前100字符): {"username":{"ciphertext":"9DMClNf3U+g=","iv":"N+PdPWQ8KFOrcwaaJidYjw==","timestamp":1752015659361},...
2025-07-09 06:00:59 [http-nio-8080-exec-4] DEBUG c.e.v.filter.DecryptionFilter - 🔐 生产级模式：执行完整的安全验证流程
2025-07-09 06:00:59 [http-nio-8080-exec-4] DEBUG c.e.video_interface.util.CryptoUtil - 🔑 动态密钥生成详情:
2025-07-09 06:00:59 [http-nio-8080-exec-4] DEBUG c.e.video_interface.util.CryptoUtil -   - 时间戳: 1752015659361
2025-07-09 06:00:59 [http-nio-8080-exec-4] DEBUG c.e.video_interface.util.CryptoUtil -   - 时间窗口: 9733420
2025-07-09 06:00:59 [http-nio-8080-exec-4] DEBUG c.e.video_interface.util.CryptoUtil -   - 基础密钥: [PROTECTED]
2025-07-09 06:00:59 [http-nio-8080-exec-4] DEBUG c.e.video_interface.util.CryptoUtil -   - 设备指纹: cac97572...
2025-07-09 06:00:59 [http-nio-8080-exec-4] DEBUG c.e.video_interface.util.CryptoUtil -   - 动态密钥: [PROTECTED]
2025-07-09 06:00:59 [http-nio-8080-exec-4] DEBUG c.e.video_interface.util.CryptoUtil - 🔧 URL路径处理:
2025-07-09 06:00:59 [http-nio-8080-exec-4] DEBUG c.e.video_interface.util.CryptoUtil -   - 原始URL: /api/users/register
2025-07-09 06:00:59 [http-nio-8080-exec-4] DEBUG c.e.video_interface.util.CryptoUtil -   - 相对路径: /users/register
2025-07-09 06:00:59 [http-nio-8080-exec-4] DEBUG c.e.v.filter.DecryptionFilter - ✅ 请求签名验证成功
2025-07-09 06:00:59 [http-nio-8080-exec-4] DEBUG c.e.v.filter.DecryptionFilter - 🔐 执行标准解密流程
2025-07-09 06:00:59 [http-nio-8080-exec-4] DEBUG c.e.video_interface.util.CryptoUtil - 🔐 内层数据签名验证:
2025-07-09 06:00:59 [http-nio-8080-exec-4] DEBUG c.e.video_interface.util.CryptoUtil -   加密字段数量: 2
2025-07-09 06:00:59 [http-nio-8080-exec-4] DEBUG c.e.video_interface.util.CryptoUtil -   时间戳: 1752015659361
2025-07-09 06:00:59 [http-nio-8080-exec-4] DEBUG c.e.video_interface.util.CryptoUtil -   设备指纹: cac97572...
2025-07-09 06:00:59 [http-nio-8080-exec-4] DEBUG c.e.video_interface.util.CryptoUtil -   签名验证: 进行中...
2025-07-09 06:00:59 [http-nio-8080-exec-4] INFO  c.e.video_interface.util.CryptoUtil - ✅ 成功解密敏感数据，字段: [password, username]
2025-07-09 06:00:59 [http-nio-8080-exec-4] INFO  c.e.v.filter.DecryptionFilter - 🔓 成功解密请求数据: POST /api/users/register
2025-07-09 06:00:59 [http-nio-8080-exec-4] DEBUG o.s.security.web.FilterChainProxy - Securing POST /users/register
2025-07-09 06:00:59 [http-nio-8080-exec-4] DEBUG c.e.v.filter.DecryptionFilter - 📄 请求已经过解密处理，直接通过
2025-07-09 06:00:59 [http-nio-8080-exec-4] DEBUG c.e.v.s.JwtAuthenticationFilter - JWT过滤器处理请求: POST /api/users/register
2025-07-09 06:00:59 [http-nio-8080-exec-4] DEBUG c.e.v.s.JwtAuthenticationFilter - 路径匹配检查: /api/users/register vs /api/users/register = true
2025-07-09 06:00:59 [http-nio-8080-exec-4] DEBUG c.e.v.s.JwtAuthenticationFilter - 路径 /api/users/register 是否为公开路径: true
2025-07-09 06:00:59 [http-nio-8080-exec-4] DEBUG c.e.v.s.JwtAuthenticationFilter - 公开路径，直接放行: /api/users/register
2025-07-09 06:00:59 [http-nio-8080-exec-4] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-07-09 06:00:59 [http-nio-8080-exec-4] DEBUG o.s.security.web.FilterChainProxy - Secured POST /users/register
2025-07-09 06:00:59 [http-nio-8080-exec-4] DEBUG o.s.web.servlet.DispatcherServlet - POST "/api/users/register", parameters={}
2025-07-09 06:00:59 [http-nio-8080-exec-4] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.example.video_interface.controller.UserController#registerUser(RegisterRequest)
2025-07-09 06:00:59 [http-nio-8080-exec-4] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Read "application/json;charset=UTF-8" to [RegisterRequest(username=dfasfads, password=aaaaaaaa)]
2025-07-09 06:00:59 [http-nio-8080-exec-4] INFO  c.e.v.controller.UserController - 收到注册请求: dfasfads
2025-07-09 06:00:59 [http-nio-8080-exec-4] DEBUG c.e.v.controller.UserController - 注册请求详情: RegisterRequest(username=dfasfads, password=aaaaaaaa)
2025-07-09 06:00:59 [http-nio-8080-exec-4] INFO  c.e.v.service.impl.UserServiceImpl - 开始处理用户注册请求: dfasfads
2025-07-09 06:00:59 [http-nio-8080-exec-4] DEBUG c.e.v.util.RequestContextUtil - 🌐 使用远程地址: 0:0:0:0:0:0:0:1
2025-07-09 06:00:59 [http-nio-8080-exec-4] DEBUG c.e.v.service.impl.UserServiceImpl - 📍 客户端IP: 0:0:0:0:0:0:0:1
Hibernate: select u1_0.id from users u1_0 where u1_0.username=? limit ?
2025-07-09 06:00:59 [http-nio-8080-exec-4] DEBUG c.e.v.s.RegistrationLimitService - 🔍 IP 0:0:0:0:0:0:0:1 当前注册次数: 8, 限制: 3, 可注册: false
2025-07-09 06:00:59 [http-nio-8080-exec-4] WARN  c.e.v.service.impl.UserServiceImpl - 🚫 IP 0:0:0:0:0:0:0:1 注册次数已达限制: 8/3，需等待 1 小时后重试
2025-07-09 06:00:59 [http-nio-8080-exec-4] ERROR c.e.v.controller.UserController - 注册失败: 注册频繁，请稍后重试
java.lang.IllegalArgumentException: 注册频繁，请稍后重试
	at com.example.video_interface.service.impl.UserServiceImpl.registerUser(UserServiceImpl.java:74)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:351)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:196)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:765)
	at org.springframework.transaction.interceptor.TransactionInterceptor$1.proceedWithInvocation(TransactionInterceptor.java:123)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:385)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:765)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:717)
	at com.example.video_interface.service.impl.UserServiceImpl$$SpringCGLIB$$0.registerUser(<generated>)
	at com.example.video_interface.controller.UserController.registerUser(UserController.java:62)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:351)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:713)
	at com.example.video_interface.controller.UserController$$SpringCGLIB$$0.registerUser(<generated>)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:259)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:192)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:920)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:830)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:914)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:590)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:205)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:110)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:108)
	at org.springframework.security.web.FilterChainProxy.lambda$doFilterInternal$3(FilterChainProxy.java:231)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:365)
	at org.springframework.security.web.access.intercept.AuthorizationFilter.doFilter(AuthorizationFilter.java:100)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:126)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:120)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:131)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:85)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:100)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:179)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at com.example.video_interface.security.JwtAuthenticationFilter.doFilterInternal(JwtAuthenticationFilter.java:63)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at com.example.video_interface.filter.DecryptionFilter.doFilter(DecryptionFilter.java:52)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:107)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:93)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:91)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:82)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:69)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:62)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:233)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:191)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.servlet.handler.HandlerMappingIntrospector.lambda$createCacheFilter$3(HandlerMappingIntrospector.java:195)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.filter.CompositeFilter.doFilter(CompositeFilter.java:74)
	at org.springframework.security.config.annotation.web.configuration.WebMvcSecurityConfiguration$CompositeFilterChainProxy.doFilter(WebMvcSecurityConfiguration.java:230)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:352)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:268)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at com.example.video_interface.filter.DecryptionFilter.doFilter(DecryptionFilter.java:192)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:482)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:391)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:896)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1744)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:1575)
2025-07-09 06:00:59 [http-nio-8080-exec-4] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [application/json] and supported [application/json, application/*+json]
2025-07-09 06:00:59 [http-nio-8080-exec-4] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [{status=error, error=注册频繁，请稍后重试}]
2025-07-09 06:00:59 [http-nio-8080-exec-4] DEBUG o.s.web.servlet.DispatcherServlet - Completed 400 BAD_REQUEST
2025-07-09 06:01:34 [SpringApplicationShutdownHook] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2025-07-09 06:01:34 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown initiated...
2025-07-09 06:01:34 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown completed.
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                          [INFO] ------------------------------------------------------------------------
[INFO] BUILD FAILURE
[INFO] ------------------------------------------------------------------------
[INFO] Total time:  02:43 min
[INFO] Finished at: 2025-07-09T05:59:57+07:00
[INFO] ------------------------------------------------------------------------
[ERROR] Failed to execute goal org.springframework.boot:spring-boot-maven-plugin:3.2.3:run (default-cli) on project video-interface: Process terminated with exit code: 137 -> [Help 1]
[ERROR] 
[ERROR] To see the full stack trace of the errors, re-run Maven with the -e switch.
[ERROR] Re-run Maven using the -X switch to enable full debug logging.
[ERROR] 
[ERROR] For more information about the errors and possible solutions, please read the following articles:
[ERROR] [Help 1] http://cwiki.apache.org/confluence/display/MAVEN/MojoExecutionException
